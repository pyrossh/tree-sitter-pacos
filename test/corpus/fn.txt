================================================================================
Function
================================================================================

fn sum(a: int, b: int): int =
  pass

fn random(a: int = 10): int =
  pass

fn toCelsius(f: float): float =
  `converts f in fahrenheit to celsius to a value
  pass

fn createPostAction(req: Request): Response! =
  pass

#[get("/posts")]
fn fetchAllPosts(req: Request): Response? =
  pass

fn add[T: int | float](a: List[T], b: List[T]): List[T] =
  pass

--------------------------------------------------------------------------------

(source
  (fn
    (fnname)
    (param
      (identifier)
      (type
        (typename)))
    (param
      (identifier)
      (type
        (typename)))
    (return_type
      (typename))
    (body
      (pass_statement)))
  (fn
    (fnname)
    (param
      (identifier)
      (type
        (typename))
      (integer))
    (return_type
      (typename))
    (body
      (pass_statement)))
  (fn
    (fnname)
    (param
      (identifier)
      (type
        (typename)))
    (return_type
      (typename))
    (body
      (doc_comment)
      (pass_statement)))
  (fn
    (fnname)
    (param
      (identifier)
      (type
        (typename)))
    (return_type
      (typename)
      (throwable))
    (body
      (pass_statement)))
  (fn
    (decorator
      (call
        (reference
          (identifier))
        (argument_list
          (string
            (string_start)
            (string_end)))))
    (fnname)
    (param
      (identifier)
      (type
        (typename)))
    (return_type
      (typename)
      (nilable))
    (body
      (pass_statement)))
  (fn
    (fnname)
    (generics
      (generic_type
        (genericname)
        (typename)
        (typename)))
    (param
      (identifier)
      (type
        (typename)
        (generics
          (generic_type
            (genericname)))))
    (param
      (identifier)
      (type
        (typename)
        (generics
          (generic_type
            (genericname)))))
    (return_type
      (typename)
      (generics
        (generic_type
          (genericname))))
    (body
      (pass_statement))))
