================================================================================
For
================================================================================

test("for") |t|
  for i := range 10
    pass

  for i := range n
    pass

  for k, v := range data
    pass

  for v := range data.list
    pass

  for i, v := range list.of(1, 2, 3)
    pass

  for k, v := range map.of("a" => 1, "b" => 2)
    pass

--------------------------------------------------------------------------------

(source
  (test
    (string
      (string_start)
      (string_end))
    (lambda
      (identifier)
      (ERROR
        (for_statement
          (identifier)
          (integer)
          (body
            (pass_statement)))
        (for_statement
          (identifier)
          (identifier)
          (body
            (pass_statement)))
        (for_statement
          (identifier)
          (identifier)
          (identifier)
          (body
            (pass_statement)))
        (identifier)
        (reference
          (identifier)
          (identifier)))
      (body
        (pass_statement))))
  (ERROR
    (UNEXPECTED ',')
    (UNEXPECTED 'v')
    (UNEXPECTED 'l')
    (UNEXPECTED 'o')
    (UNEXPECTED 'k')
    (UNEXPECTED 'v')
    (UNEXPECTED 'p')
    (UNEXPECTED 'o')
    (string_start)
    (UNEXPECTED '"')
    (string_start)
    (string_start)
    (string_start)))

================================================================================
while
================================================================================

test("while") |t|
  while true
    pass

  while i < 9
    pass

  while a > b && c < d
    pass

--------------------------------------------------------------------------------

(source
  (test
    (string
      (string_start)
      (string_end))
    (lambda
      (identifier)
      (body
        (while_statement
          (true)
          (block
            (pass_statement)))
        (while_statement
          (comparison_operator
            (identifier)
            (integer))
          (block
            (pass_statement)))
        (while_statement
          (boolean_operator
            (comparison_operator
              (identifier)
              (identifier))
            (comparison_operator
              (identifier)
              (identifier)))
          (block
            (pass_statement)))))))
